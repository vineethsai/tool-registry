version: '3.8'

services:
  app:
    build: .
    image: tool-registry:1.0.4
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/tool_registry
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=your_secret_key_here
      - LOG_LEVEL=INFO  # Set to DEBUG for more detailed logging information
      - APP_VERSION=1.0.4
    volumes:
      - ./tool_registry:/app/tool_registry
      - ./data:/app/data
    depends_on:
      - db
      - redis
    restart: unless-stopped
    command: ./start.sh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "description=Tool Registry API with enhanced test reliability and stability (v1.0.4)"

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tool_registry
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  docs:
    image: python:3.9-slim
    volumes:
      - ./postman:/app/postman
    ports:
      - "9000:8080"
    working_dir: /app/postman
    command: python server.py
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/tool_registry_api_collection.json"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      - PORT=8080
      - SERVER_DESCRIPTION=Postman Collection with CRUD and Cross-Entity Test Scenarios

volumes:
  postgres_data:
  redis_data: 