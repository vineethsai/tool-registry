# Docker Compose file for Tool Registry API
# Includes app (API), PostgreSQL database, Redis, documentation server and frontend

version: '3.8'

services:
  app:
    container_name: tool-registry-app
    restart: always
    depends_on:
      - db
      - redis
    image: tool-registry:2.0.1  # Updated to version 2.0.1 with comprehensive API testing
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tool_registry
      - POSTGRES_PORT=5432
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/tool_registry
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=e89d66078a7a5c37b1240d29e3bb4d160b7dd4501f876b2793be3e5523cf5527
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - TEST_MODE=true
      - CORS_ORIGINS=*
      - LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    volumes:
      - ./data:/app/data

  db:
    container_name: tool-registry-db
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tool_registry
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: tool-registry-redis
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    container_name: tool-registry-frontend
    build:
      context: ./genai-tool-explorer
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - app
    environment:
      - VITE_API_URL=http://localhost:8000

  docs:
    container_name: tool-registry-docs
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    environment:
      - SWAGGER_JSON=/foo/openapi.json
      - BASE_URL=/docs
    volumes:
      - ./docs:/foo

volumes:
  postgres_data:
  redis_data: 